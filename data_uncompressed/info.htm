<!doctype html>
<html lang="en">

	<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Setup Summary">
    <title>PaGoI Machine Monitor Network - Network Setup Summary</title>

    <!-- <link rel="stylesheet" href="https://unpkg.com/purecss@0.6.2/build/pure-min.css" integrity="sha384-" crossorigin="anonymous"> -->
    <!-- <link rel="stylesheet" href="https://unpkg.com/purecss@0.6.2/build/grids-responsive-min.css"> -->
    <!--local stored files-->
    <!-- <link rel="stylesheet" href="./css/pure-min.css">
    <link rel="stylesheet" href="./css/gridsresponsivemin.css">
  	<link rel="stylesheet" href="./css/CustomStyles.min.css"> -->

	  <link rel="stylesheet" href="./css/PaGoI-global.min.css">


</head>
<body>
<!--
[if lte IE 8]>
    <link rel="stylesheet" href="https://unpkg.com/purecss@0.6.2/build/grids-responsive-old-ie-min.css">
	[endif]
	[if gt IE 8]>
	<link rel="stylesheet" href="https://unpkg.com/purecss@0.6.2/build/grids-responsive-min.css">
	[endif]
	-->
<div class="custom-wrapper pure-g" id="menu">
    <div class="pure-u-1 pure-u-md-1-3">
        <div class="pure-menu">
            <a href="http://www.pagoi.com" class="pure-menu-heading custom-brand" id="brand">PAGOI</a>
            <a href="#" class="custom-toggle" id="toggle"><s class="bar"></s><s class="bar"></s></a>
        </div>
    </div>
    <div class="pure-u-1 pure-u-md-1-3">
        <div class="pure-menu pure-menu-horizontal custom-can-transform">
            <ul class="pure-menu-list">
                <li class="pure-menu-item"><a href="index.htm" class="pure-menu-link">Home</a></li>
                <li class="pure-menu-item"><a href="#" class="pure-menu-link">About</a></li>
                <li class="pure-menu-item"><a href="#" class="pure-menu-link">Contact</a></li>
            </ul>
        </div>
    </div>
</div>
<a href="config_mqtt.htm" class="pure-button" > &#8678</a>&nbsp;&nbsp;<strong>Network Information</strong>&nbsp;&nbsp;<a href="system.htm" class="pure-button" > &#8680</a>

	<hr>
Summary of network settings:<br>
	<table class="pure-table" >
		<tr>
			<td align="right">SSID :</td>
			<td>
				<span id="x_ssid"></span>
			</td>
		</tr>
		<tr>
			<td align="right">IP :</td>
			<td>
				<span id="x_ip"></span>
			</td>
		</tr>
		<tr>
			<td align="right">Netmask :</td>
			<td>
				<span id="x_netmask"></span>
			</td>
		</tr>
		<tr>
			<td align="right">Gateway :</td>
			<td>
				<span id="x_gateway"></span>
			</td>
		</tr>
		<tr>
			<td align="right">DNS :</td>
			<td>
				<span id="x_dns"></span>
			</td>
		</tr>
		<tr>
			<td align="right">Mac :</td>
			<td>
				<span id="x_mac"></span>
			</td>
		</tr>

		<tr>
			<td colspan="2">
			<span><hr></span>
		</td>
	</tr>
	<tr>
		<td align="right">NTP Date:</td>
		<td>
			<span id="x_ntp_date"></span>
		</td>
	</tr>
  <tr>
    <td align="right">NTP Time:</td>
    <td>
      <span id="x_ntp_time"></span>
    </td>
  </tr>
  <tr>
    <td align="right">Last sync:</td>
    <td>
      <span id="x_ntp_sync"></span>
    </td>
  </tr>
  <tr>
    <td align="right">Uptime:</td>
    <td>
       <span id="x_uptime"></span>
    </td>
  </tr>
  <tr>
    <td align="right">Last boot:</td>
    <td>
       <span id="x_last_boot"></span>
    </td>
  </tr>
  <tr>
		<td colspan="2" align="center">
			<a href="javascript:GetState(); initEvt()" class="pure-button cool">Refresh</a>
		</td>
	</tr>
</table>

</body>

<footer style="font-size:.5em; text-align: right"></style>
<p>Adaptation by Chris Armbrust, Marin Digital (c)2017-2021</p>
<p>Contact: <a href='mailto:info@marin-digital.com'>
info@marin-digital.com</a>.</p>
<p>Version: 1.0 20210122</p>
</footer>


<!--	//Scope: Page functions -->
<script language="javascript" type="text/javascript">

	function GetState()
	{
		setValues("/admin/infovalues");
	}

    window.onload = function () {
		// load("./css/pure_style.min.css","css", function(){
            load("./js/microajax.min.js", "js", function () {
				GetState();
				// setValues("/admin/infovalues");
				});
        // });
    }
	function load(e, t, n) {
		if ("js" == t) {
			var a = document.createElement("script");
			a.src = e,
			a.type = "text/javascript",
			a.async = !1,
			a.onload = function () { n() },
			document.getElementsByTagName("head")[0].appendChild(a)
		} else if ("css" == t) {
			var a = document.createElement("link");
			a.href = e,
			a.rel = "stylesheet",
			a.type = "text/css",
			a.async = !1,
			a.onload = function () { n() },
			document.getElementsByTagName("head")[0].appendChild(a)
		}
	}
</script>

<!--	//Menu related functions -->
<script language="javascript" type="text/javascript">

	(function (window, document) {
	var menu = document.getElementById('menu'),
		WINDOW_CHANGE_EVENT = ('onorientationchange' in window) ? 'orientationchange':'resize';

	function toggleHorizontal() {
		[].forEach.call(
			document.getElementById('menu').querySelectorAll('.custom-can-transform'),
			function(el){
				el.classList.toggle('pure-menu-horizontal');
			}
		);
	};

	function toggleMenu() {
		// set timeout so that the panel has a chance to roll up
		// before the menu switches states
		if (menu.classList.contains('open')) {
			setTimeout(toggleHorizontal, 500);
		}
		else {
			toggleHorizontal();
		}
		menu.classList.toggle('open');
		document.getElementById('toggle').classList.toggle('x');
	};

	function closeMenu() {
		if (menu.classList.contains('open')) {
			toggleMenu();
		}
	}

	document.getElementById('toggle').addEventListener('click', function (e) {
		toggleMenu();
		e.preventDefault();
	});

	window.addEventListener(WINDOW_CHANGE_EVENT, closeMenu);
	})(this, this.document);
</script>

<!--- //NTP Functions -->
<script language="javascript" type="text/javascript">

    function initEvt() {
        startEvents();
    }

    function startEvents() {
        var evs = new EventSource('/events');
        evs.onopen = function (evt) {
            console.log("Event source connected");
        };

        evs.onerror = function (evt) {
            if (evt.target.readyState != EventSource.OPEN) {
                console.log("Event source disconnected. Error: " + evt.data);
            }
        };

        evs.onmessage = function (evt) {
            console.log("Event " + evt.data);
        };
        evs.addEventListener('timeDate', function (evt) {
            var jsonTimeDate = JSON.parse(evt.data);
            document.getElementById("x_ntp_time").innerHTML = jsonTimeDate.time;
            document.getElementById("x_ntp_date").innerHTML = jsonTimeDate.date;
            document.getElementById("x_ntp_sync").innerHTML = jsonTimeDate.lastSync;
            document.getElementById("x_uptime").innerHTML = jsonTimeDate.uptime;
            document.getElementById("x_last_boot").innerHTML = jsonTimeDate.lastBoot;
        }, false);
    }

    window.addEventListener('load', initEvt, true);
</script>

</html>
