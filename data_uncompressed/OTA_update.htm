<!DOCTYPE html>
<html lang="en">
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="refresh" content="60;url=/index.htm">

<!-- <link rel="stylesheet" href="css\style.css" type="text/css" /> -->
<!-- <script src="./js/microajax.min.js"></script> -->
<script src="./js/spark-md5.min.js" type="text/javascript"></script>

<head>
    <meta charset="utf-8">
    <!-- <meta name="viewport" content="width=device-width, initial-scale=1.0"> -->
    <meta name="description" content="Update Monitor Firmware">
    <title>PaGoI Machine Monitor Network -Update Firmware</title>

    <!-- <link rel="stylesheet" href="https://unpkg.com/purecss@0.6.2/build/pure-min.css" integrity="sha384-" crossorigin="anonymous">
  <link rel="stylesheet" href="https://unpkg.com/purecss@0.6.2/build/grids-responsive-min.css"> -->
    <!--local stored files-->
    <!-- <link rel="stylesheet" href="./css/pure-min.css">
    <link rel="stylesheet" href="./css/gridsresponsivemin.css">
  	<link rel="stylesheet" href="./css/CustomStyles.min.css"> -->

	  <link rel="stylesheet" href="./css/PaGoI-global.min.css">
</head>

<div class="custom-wrapper pure-g" id="menu">
    <div class="pure-u-1 pure-u-md-1-3">
        <div class="pure-menu">
            <a href="http://www.pagoi.com" class="pure-menu-heading custom-brand" id="brand">PAGOI</a>
            <a href="#" class="custom-toggle" id="toggle"><s class="bar"></s><s class="bar"></s></a>
        </div>
    </div>
    <div class="pure-u-1 pure-u-md-1-3">
        <div class="pure-menu pure-menu-horizontal custom-can-transform">
            <ul class="pure-menu-list">
                <li class="pure-menu-item"><a href="index.htm" class="pure-menu-link">Home</a></li>
                <li class="pure-menu-item"><a href="info.htm" class="pure-menu-link">About</a></li>
                <li class="pure-menu-item"><a href="#" class="pure-menu-link">Contact</a></li>
            </ul>
        </div>
    </div>
</div>

<body>
    <a href="./system.htm" class="pure-button"> &#8678</a>&nbsp;&nbsp;<strong>Update Firmware</strong>
    <hr>
    <form method='POST' action='/update' enctype='multipart/form-data'>
        <table>
            <tr>
                <td>
                    <input id="fileName" type='file' name='update' onchange="summd5()" disabled>
                </td>
            </tr>
            <tr>
                <td>
                    <input id="updateButton" type='submit' value='Update' disabled>
                </td>
            </tr>
            <tr>
                <td id="md5row" hidden>
                    Calculated file MD5 hash: <span id="clientHash">Select a file</span><br>
                    Size: <span id="fileSize"></span> Bytes
                </td>
            </tr>
            <tr>
                <td>
                    Checking if remote update is possible... <span id="remupd"></span>
                </td>
            </tr>
            <tr>
                <td>
                    <span id="remupdResult"></span>
                </td>
            </tr>
        </table>
    </form>
</body>

<footer style="font-size:.5em; text-align: right">
    </style>
    <p>Adaptation by Chris Armbrust, Marin Digital (c)2017-2021</p>
    <p>Contact: <a href='mailto:info@marin-digital.com'>
            info@marin-digital.com</a>.</p>
    <p>Version: 1.0 20210122</p>
</footer>

</html>

<script>
    function timeRefresh(timeoutPeriod) {
        setTimeout("location.reload(true);", timeoutPeriod);
    }
    function GetState() {
        setValues("/update/updatepossible")
        setTimeout(function () {
            if (document.getElementById("remupd").innerHTML == "OK") {
                console.log("Remote update is availible - okay.");
                document.getElementById("fileName").disabled = false;
                document.getElementById("updateButton").disabled = true;
                if (document.getElementById("remupdResult").innerHTML = "") {
                    document.getElementById("remupdResult").innerHTML = "Browse to new firmware file.";
                }
            }
        }, 2000);
    }

    window.onload = function () {

        load("./js/microajax.min.js", "js", function () {
            GetState();
        });
    };


    function load(e, t, n) {
        if ("js" == t) {
            var a = document.createElement("script");
            a.src = e,
                a.type = "text/javascript",
                a.async = !1,
                a.onload = function () { n() },
                document.getElementsByTagName("head")[0].appendChild(a)
        } else if ("css" == t) {
            var a = document.createElement("link");
            a.href = e,
                a.rel = "stylesheet",
                a.type = "text/css",
                a.async = !1,
                a.onload = function () { n() },
                document.getElementsByTagName("head")[0].appendChild(a)
        }
    }

    var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,
        input = document.getElementById('fileName'),
        running = false,
        ua = navigator.userAgent.toLowerCase();

    function summd5() {
        input = document.getElementById("fileName");
        if (running) {
            return;
        }
        if (!input.files.length) {
            console.error('Please select a file');
            return;
        }
        var fileReader = new FileReader(),
            file = input.files[0],
            time;
        fileReader.onload = function (e) {
            running = false;
            if (file.size != e.target.result.length) {
                console.error('ERROR:Browser reported success but could not read the file until the end');
            } else {
                md5hash = SparkMD5.hashBinary(e.target.result);
                console.info('Finished loading!');
                console.info('Computed hash: ' + md5hash); // compute hash
                console.info('Total time: ' + (new Date().getTime() - time) + 'ms');
                document.getElementById('md5row').hidden = false;
                document.getElementById('clientHash').innerHTML = md5hash;
                document.getElementById('fileSize').innerHTML = file.size;
                setValues('/setmd5?md5=' + md5hash + '&size=' + file.size);
                if (document.getElementById("remupd").innerHTML == "OK") {
                    document.getElementById("updateButton").disabled = false;
                    // reload page after 60 seconds - should allow enough time for upload and reboot
                    timeRefresh(60000); 
                }
            }
        };
        fileReader.onerror = function () {
            running = false;
            console.error('ERROR: FileReader onerror was triggered, maybe the browser aborted due to high memory usage');
        };
        running = true;
        console.info('Starting normal test (' + file.name + ')');
        time = new Date().getTime();
        fileReader.readAsBinaryString(file);
    }
    //Menu related functions
    (function (window, document) {
        var menu = document.getElementById('menu'),
            WINDOW_CHANGE_EVENT = ('onorientationchange' in window) ? 'orientationchange' : 'resize';

        function toggleHorizontal() {
            [].forEach.call(
                document.getElementById('menu').querySelectorAll('.custom-can-transform'),
                function (el) {
                    el.classList.toggle('pure-menu-horizontal');
                }
            );
        };

        function toggleMenu() {
            // set timeout so that the panel has a chance to roll up
            // before the menu switches states
            if (menu.classList.contains('open')) {
                setTimeout(toggleHorizontal, 500);
            }
            else {
                toggleHorizontal();
            }
            menu.classList.toggle('open');
            document.getElementById('toggle').classList.toggle('x');
        };

        function closeMenu() {
            if (menu.classList.contains('open')) {
                toggleMenu();
            }
        }

        document.getElementById('toggle').addEventListener('click', function (e) {
            toggleMenu();
            e.preventDefault();
        });

        window.addEventListener(WINDOW_CHANGE_EVENT, closeMenu);
    })(this, this.document);


</script>