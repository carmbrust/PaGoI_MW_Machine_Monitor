; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = d1_mini
; default_envs = esp32dev, d1_mini
; default_envs = esp32dev
description = This project uses the PaGoI architecture and is customized for MILwright. 

[common]
; lib_extra_dirs = ${PROJECT_DIR}\..\PaGoI_Libraries
upload_speed = 921600
; Win10 Workstation
upload_port = COM13
monitor_port = COM[13]
; MBP ports (Left)
; upload_speed = 230400
;  below is too fast on MPB
; upload_speed = 460800
;  ESP8266 WeMOS Mini D1
; upload_port = /dev/cu.wchusbserial1410
; monitor_port = /dev/cu.wchusbserial1410
;  ESP8266 WeMOS Pro with Antenna
; upload_port = /dev/cu.SLAB_USBtoUART
; monitor_port = /dev/cu.SLAB_USBtoUART
; ESP01 default ports
esp01_upload_speed = 115200
esp01_upload_port = COM37
esp01_upload_flags = 
	-a1234
	--progress
build_flag_release = 
	-DNOT_Released
	-DSERIAL_RX_BUFFER_SIZE=256
	-DSERIAL_TX_BUFFER_SIZE=256
	-DBUILD_TIMESTAMP=$UNIX_TIME
	-DAPP_VERSION=21025
	-DAPP_NAME="MILwright Machine Monitor Node"
	-DOLED_DISPLAY
	-DWIFI_APPROVED_AP_PREFIX='"MW_MM_AP"'
	-DPAGOI_CLIENT='"MILwright"'	
	-DOTA_SERVER='"192.168.100.1"'
	-DOTA_PASS='"1234"'
	-DOTA_PORT=8266
	-DOTA_PATH='"/OTA_Images"'
	-DOTA_update_username="admin"
	-DOTA_update_password="admin"
build_flag_relay_mini = 
	-DRELAY_0=14
	-DRELAY_1=12
	-DRELAY_2=13
	-DRELAY_3=16
	-DLED1=14
	-DLED2=12
	-DLED3=13
	-DLED4=16
	-DLED5=15
build_flag_relay_esp01 = -DRELAY_0=0 -DRELAY_1=2 -DRELAY_2=2
build_flags_mini = -DUSE_HW_SER -D_SS_MAX_RX_BUFF=256 -D_SS_MAX_TX_BUFF=256
build_flags_esp01 = -DUSE_HW_SER -D_SPIFF_SIZE=163840

[env]
lib_compat_mode = strict
; lib_ignore = WiFi
lib_deps = 
	EspSoftwareSerial @ 6.9.0
	ArduinoJson
	NtpClientLib
	elapsedMillis
	; ESP8266WiFi
	306@1.2.3
	; sstaub/Ticker @ 3.2.0 ; << this one does not work
	Ticker@1.0
	; jsc/Ticker @ 1.0.2
	; Original version of ESP Async WebServer
	;https://github.com/me-no-dev/ESPAsyncWebServer.git
	; fork of above: 
	; Optimized memory usage by moving all strings to PROGMEM, saving 1.5-2KB of RAM
	; Removed limit of 8 messages per AsyncWebSocket and replaced it with a size limit for the entire queue or free heap. See AsyncWebSocket.h
; 	https://github.com/sascha432/ESPAsyncWebServer.git
; git@github.com:yubox-node-org/ESPAsyncWebServer.git
; compiled successfully with this version (remember delete .pio or clean to get a fresh compile)
	; https://github.com/yubox-node-org/ESPAsyncWebServer.git
	; Most advanced as of 20210120 - 
	https://github.com/lorol/ESPAsyncWebServer.git
	
[env:env_custom_target]
platform = espressif8266
board = esp01_1m
framework = arduino
custom_ping_host = google.com

[env:esp12e]
platform = espressif8266
board = esp12e
framework = arduino
upload_speed = ${common.upload_speed}
upload_port = ${common.upload_port}
build_flags = -Wl,-Tesp8266.flash.4m.ld ${common.build_flag_release} ${common.build_flag_Relay_mini} ${common.build_flags_mini}
board_build.f_cpu = 160000000L
board_build.f_flash = 80000000L
board_resetmethod = ck
upload_resetmethod = ck

[env:esp01_1m]
platform = espressif8266
board = esp01_1m
framework = arduino
upload_speed = ${common.esp01_upload_speed}
upload_port = ${common.esp01_upload_port}
build_flags = ${common.build_flag_release} ${common.build_flag_Relay_esp01} ${common.build_flags_esp01}

[env:esp01_1m_160]
platform = espressif8266
board = esp01_1m
framework = arduino
upload_speed = ${common.esp01_upload_speed}
upload_port = ${common.esp01_upload_port}
build_flags = -Wl,-Tesp8266.flash.1m160.ld ${common.build_flag_release} ${common.build_flag_Relay_esp01} ${common.build_flags_esp01}
board_build.f_cpu = 160000000L

[env:esp01_1m_160_OTA]
platform = https://github.com/platformio/platform-espressif8266.git
board = esp01_1m
framework = arduino
build_flags = -Wl,-Tesp8266.flash.1m160.ld ${common.build_flag_release} ${common.build_flag_Relay_esp01} ${common.build_flags_esp01}
board_build.f_cpu = 160000000L
board_build.f_flash = 80000000L
upload_port = 192.168.100.192
upload_flags = -a1234
upload_protocol = espota

[env:esp01_1m_192]
platform = espressif8266
board = esp01_1m
framework = arduino
upload_speed = ${common.esp01_upload_speed}
upload_port = ${common.esp01_upload_port}
upload_flags = ${common.esp01_upload_flags}
build_flags = -Wl,-Tesp8266.flash.1m192.ld ${common.build_flag_release} ${common.build_flag_Relay_esp01} ${common.build_flags_esp01} ${common.lib_deps_external}

[env:esp01_1m_WiFi]
platform = espressif8266
board = esp01_1m
framework = arduino
lib_deps = 
	EspSoftwareSerial@5.0.4
build_flags = ${common.build_flag_release} ${common.build_flag_Relay_mini} ${common.build_flags_mini}
upload_protocol = espota
upload_port = 192.168.100.187
upload_flags = -a1234

[env:d1_mini_WiFi_OTA]
platform = espressif8266
board = d1_mini
framework = arduino
board_build.ldscript = eagle.flash.4m3m.ld
build_flags = ${common.build_flag_release} ${common.build_flag_Relay_mini} ${common.build_flags_mini}
board_build.f_cpu = 160000000L
board_build.f_flash = 80000000L
upload_protocol = espota
upload_port = 192.168.1.105
upload_flags = -a1234

[env:d1_mini]
; platform = espressif8266@2.5.1
platform = espressif8266
board = d1_mini
framework = arduino
board_build.filesystem = spiffs
; board_build.filesystem = littlefs
board_build.ldscript = eagle.flash.4m1m.ld
upload_speed = ${common.upload_speed}
upload_port = ${common.upload_port}
monitor_port = ${common.upload_port}
build_flags = ${common.build_flag_release} ${common.build_flag_Relay_mini} ${common.build_flags_mini} -DMINI_D1
board_build.f_cpu = 160000000L
board_build.f_flash = 80000000L
lib_ignore = WiFi
; lib_deps = Ticker@1.0

[env:wemos_d1_mini32]
platform = espressif32
board = wemos_d1_mini32
framework = arduino
build_flags = ${common.build_flag_release} ${common.build_flag_Relay_mini} ${common.build_flags_mini}

[env:esp32dev]
platform = espressif32
board = esp32dev
framework = arduino
build_flags = ${common.build_flag_release} ${common.build_flag_Relay_mini} ${common.build_flags_mini}
